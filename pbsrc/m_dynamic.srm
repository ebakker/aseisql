HA$PBExportHeader$m_dynamic.srm
forward
global type m_dynamic from menu
end type
end forward

global type m_dynamic from menu
end type
global m_dynamic m_dynamic

type variables
private powerobject locator
private string eventname
private long wparam
private string lparam

end variables

forward prototypes
public subroutine of_init (readonly powerobject a_locator, readonly string a_eventname, readonly long a_wparam, readonly string a_lparam)
public function m_dynamic of_additem (readonly string a_text, readonly boolean a_enabled, readonly powerobject a_locator, readonly string a_event, readonly long a_wparam, readonly string a_lparam)
end prototypes

public subroutine of_init (readonly powerobject a_locator, readonly string a_eventname, readonly long a_wparam, readonly string a_lparam);locator=a_locator
eventname=a_eventname
wparam=a_wparam
lparam=a_lparam

end subroutine

public function m_dynamic of_additem (readonly string a_text, readonly boolean a_enabled, readonly powerobject a_locator, readonly string a_event, readonly long a_wparam, readonly string a_lparam);m_dynamic mi
mi=create m_dynamic
mi.text=a_text
mi.enabled=a_enabled
mi.of_init(a_locator,a_event,a_wparam,a_lparam)
this.item[upperbound(this.item)+1]=mi
return mi

end function

on m_dynamic.create
m_dynamic=this
call super::create
this.text = "m_dynamicitem"
end on

on m_dynamic.destroy
call super::destroy
end on

event clicked;locator.postevent(eventname,wparam,lparam)

end event

